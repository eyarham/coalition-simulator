{"version":3,"sources":["logo.svg","components/GroupPanel.jsx","components/Simulator.jsx","App.js","reportWebVitals.js","index.js"],"names":["GroupPanel","group","people","name","members","map","m","k","p","value","id","onClick","Simulator","defaultData","groups","useState","groupname","setGroupName","personName","setPersonName","selectedGroupId","setSelectedGroupId","loadDataHidden","setLoadDataHidden","dataToLoad","setDataToLoad","data","setData","isDataModelHidden","setIsDataModelHidden","setPeople","peopleToSet","newData","setGroups","groupsToSet","selectedGroup","filter","g","hidden","onChange","e","target","JSON","parse","key","newPeople","push","length","preventDefault","stringify","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48743bd2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nconst GroupPanel = ({ group, people }) => {\r\n  \r\n  if (!group)\r\n    return <div></div>;\r\n\r\n    const addPerson = ()=>{\r\n\r\n    }\r\n  return (\r\n    <div>\r\n\r\n      <h3> {group.name}</h3>\r\n      <h4>Members</h4>\r\n      {group.members && group.members.map((m, k) => {\r\n       return (<div key={k}>{m.name}</div>)\r\n      })}\r\n      <select>\r\n        {people && people.map((p,k)=>(<option key={k} value={p.id}>{p.name}</option>))}\r\n      </select>\r\n      <button onClick={addPerson}>Add</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GroupPanel\r\n","\r\nimport React, { useState } from 'react'\r\nimport GroupPanel from './GroupPanel';\r\n\r\nexport const Simulator = () => {\r\n  const defaultData = { people: [], groups: [] };\r\n  // const [people, setPeople] = useState([{ name: \"Eric\", id: 1 }]);\r\n  //const [groups, setGroups] = useState([]);\r\n  const [groupname, setGroupName] = useState();\r\n  const [personName, setPersonName] = useState();\r\n  const [selectedGroupId, setSelectedGroupId] = useState();\r\n  const [loadDataHidden, setLoadDataHidden] = useState(true);\r\n  const [dataToLoad, setDataToLoad] = useState();\r\n  const [data, setData] = useState(defaultData);\r\n  const [isDataModelHidden, setIsDataModelHidden] = useState(false);\r\n  const { people, groups } = data;\r\n  const setPeople = (peopleToSet) => {\r\n    var newData = data;\r\n    newData.people = peopleToSet;\r\n    setData(newData);\r\n  }\r\n  const setGroups = (groupsToSet) => {\r\n    var newData = data;\r\n    newData.groups = groupsToSet;\r\n    setData(newData);\r\n  }\r\n  const onGroupNameChange = (e) => {\r\n    setGroupName(e.target.value);\r\n  }\r\n  const setSelectedGroup = e => {\r\n    setSelectedGroupId(e);\r\n  }\r\n  const onPersonNameChange = (e) => {\r\n    setPersonName(e.target.value);\r\n  }\r\n  const addPerson = () => {\r\n    var newPeople = people;\r\n    newPeople.push({ name: personName, id: people.length + 1 });\r\n    setPeople(newPeople);\r\n  }\r\n  const addGroup = (e) => {\r\n    e.preventDefault();\r\n    var newPeople = groups;\r\n    newPeople.push({ name: groupname, id: groups.length + 1, members: [] });\r\n    setGroups(newPeople);\r\n  }\r\n  const loadDemoData = () => {\r\n    const people = [{ name: \"Eric\", id: 1 }]\r\n    setPeople(people);\r\n    const groups = [{ name: \"Group 1\", id: 1 }]\r\n    setGroups(groups);\r\n    setSelectedGroupId(1);\r\n  }\r\n  const loadDemoData2 = () => {\r\n    var demoData2 = { people: [{ name: \"Ada\", id: 1 }, { name: \"Dorothy\", id: 2 }], groups: [{ name: \"Group 1\", id: 1, members: [{ name: \"Ada\", id: 1 }] }] };\r\n    setData(demoData2)\r\n  }\r\n  const resetData = () => {\r\n    setData(defaultData)\r\n  }\r\n  const toggleCustomData = () => {\r\n    setLoadDataHidden(!loadDataHidden);\r\n  }\r\n  const toggleIsDataModelHidden = () => {\r\n    setIsDataModelHidden(!isDataModelHidden);\r\n  }\r\n  const selectedGroup = groups.filter(g => g.id === selectedGroupId)[0];\r\n  const onLoadDataChange = (e) => {\r\n    setDataToLoad(e.target.value);\r\n  }\r\n  const loadCustomData = () => {\r\n    setData(JSON.parse(dataToLoad));\r\n  }\r\n  return (\r\n    <div>\r\n      <h1> Simulator</h1>\r\n      <p>In here, we're gonna simulate some things</p>\r\n      <button onClick={loadDemoData}>Load Demo Data</button>\r\n      <button onClick={loadDemoData2}>Load Demo Data2</button>\r\n      <button onClick={toggleCustomData}>Show Custom Data</button>\r\n      <div hidden={loadDataHidden}>\r\n        <div><textarea onChange={onLoadDataChange}></textarea></div>\r\n        <button onClick={loadCustomData}>Load Custom Data</button>\r\n      </div>\r\n\r\n      <button onClick={resetData}>Reset Data</button>\r\n      <div>\r\n        <h3>People</h3>\r\n        {people && people.map((p, key) => { return <div key={key}>{p.name}</div> })}\r\n        <input onChange={onPersonNameChange}></input>\r\n        <button onClick={addPerson}>Add Person</button>\r\n      </div>\r\n      <h3>Groups</h3>\r\n      {groups && groups.map((g, key) => (\r\n        <div key={key}>\r\n          {g.name}<button onClick={() => setSelectedGroup(g.id)}>Select</button>\r\n        </div>))}\r\n      <input onChange={onGroupNameChange}></input>\r\n      <button onClick={addGroup}>Add Group</button>\r\n      <h3>Selected Group</h3>\r\n      <div>{selectedGroupId}</div>\r\n\r\n      <div> {selectedGroup && selectedGroup.name}</div>\r\n      <GroupPanel group={selectedGroup} people={people} />\r\n      <hr />\r\n      <button onClick={toggleIsDataModelHidden}>Show Data Model</button>\r\n      <div hidden={isDataModelHidden}>\r\n        <h3>Data Model</h3>\r\n        <p>Copy this into the custom data box at the top to save and load your data.</p>\r\n        <code>\r\n          {JSON.stringify(data)}\r\n        </code>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Simulator;","import logo from './logo.svg';\nimport './App.css';\nimport Simulator from './components/Simulator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    \n    <Simulator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}